"""Ajout enum

Revision ID: 25116bbd585c
Revises: 07e6a2b58cb7
Create Date: 2020-10-02 15:27:28.605600

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.sql import text


# revision identifiers, used by Alembic.
revision = '25116bbd585c'
down_revision = '07e6a2b58cb7'
branch_labels = None
depends_on = None

def add_column_enum(column_name, values, sql):
    enum_name = column_name + "_enum"
    enum = postgresql.ENUM(*values, name=enum_name)
    enum.create(op.get_bind())

    old_column_name = column_name + '_old'
    op.alter_column('inscription', column_name, new_column_name=old_column_name)
    op.add_column('inscription', sa.Column(column_name, sa.Enum(*values, name=enum_name)))
    conn = op.get_bind()
    conn.execute(text(sql))
    #op.drop_column('inscription', old_column_name)


def upgrade():
    add_column_enum(
        "frequence",
        ["quotidien", "pollution"],
        """
        UPDATE inscription SET frequence = 'quotidien' WHERE frequence_old ILIKE '%quotidien%';
        UPDATE inscription SET frequence = 'pollution' WHERE frequence_old NOT ILIKE '%quotidien%';
        """
    )

    add_column_enum(
        "diffusion",
        ["sms", "mail"],
        """
        UPDATE inscription SET diffusion = 'sms' WHERE diffusion_old ILIKE '%sms%';
        UPDATE inscription SET diffusion = 'mail' WHERE diffusion_old ILIKE '%mail%';
        """
    )



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('inscription', sa.Column('diffusion', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('inscription', sa.Column('frequence', sa.VARCHAR(), autoincrement=False, nullable=True))
    # ### end Alembic commands ####
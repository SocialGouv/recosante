generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum NotifationEnum {
  morning
  evening
  alert
}

enum IndicatorsSlugEnum {
  indice_atmospheric
  indice_uv
  pollen_allergy
  weather_alert
  // episode_pollution_atmospheric
  bathing_water
  // tap_water
}

model User {
  id                       String              @id @default(uuid())
  matomo_id                String              @unique
  municipality_insee_code  String? // code INSEE
  municipality_name        String?
  municipality_zip_code    String?
  push_notif_token         String?
  created_at               DateTime            @default(now())
  updated_at               DateTime            @default(now()) @updatedAt
  favorite_indicator       IndicatorsSlugEnum?
  notifications_preference NotifationEnum[]

  @@index([push_notif_token], type: Hash)
}

enum DataAvailabilityEnum {
  AVAILABLE // Données disponibles
  NOT_AVAILABLE // Données non disponibles
}

model IndiceUv {
  id String @id @default(uuid())

  // common fields for all indicators
  municipality_insee_code String
  validity_start          DateTime // the date is the first date of the validity period, included
  validity_end            DateTime // the date is the last date of the validity period, included
  diffusion_date          DateTime
  data_availability       DataAvailabilityEnum? @default(AVAILABLE)
  created_at              DateTime              @default(now())
  updated_at              DateTime              @default(now()) @updatedAt
  // specific fields for this indicator
  uv_j0                   Int? // the day of validity_start
  uv_j1                   Int? // the day + 1 of validity_start
  uv_j2                   Int? // the day + 2 of validity_start
  uv_j3                   Int? // the day + 3 of validity_start

  // index by municipality_insee_code and diffusion_date desc and validity_start asc
  @@index([municipality_insee_code, diffusion_date, validity_start], name: "indice_uv_municipality_insee_code_diffusion_date_validity_start")
}

// REAP - Risque d'Exposition aux Allergènes Polliniques
model PollenAllergyRisk {
  id                      String                @id @default(uuid())
  // common fields for all indicators
  validity_start          DateTime // the date is the first date of the validity period, included
  validity_end            DateTime // the date is the last date of the validity period, included
  diffusion_date          DateTime
  created_at              DateTime              @default(now())
  updated_at              DateTime              @default(now()) @updatedAt
  municipality_insee_code String
  data_availability       DataAvailabilityEnum? @default(AVAILABLE)
  // specific fields for this indicator
  cypres                  Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  noisetier               Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  aulne                   Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  peuplier                Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  saule                   Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  frene                   Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  charme                  Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  bouleau                 Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  platane                 Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  chene                   Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  olivier                 Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  tilleul                 Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  chataignier             Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  rumex                   Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  graminees               Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  plantain                Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  urticacees              Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  armoises                Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  ambroisies              Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
  total                   Int? // 0: risque nul, 1: très faible, 2: faible, 3: moyen, 4: élevé, 5: très élevé
}

enum CodeAlertEnums {
  GREEN // Vigilance verte
  YELLOW // Vigilance jaune
  ORANGE // Vigilance orange
  RED // Vigilance rouge
}

enum PhenomenonsEnum {
  VIOLENT_WIND // Vent violent
  RAIN_FLOOD // Pluie-Inondation
  STORM // Orages
  FLOOD // Crues
  SNOW_ICE // Neige-verglas
  HEAT_WAVE // Canicule
  COLD_WAVE // Grand Froid
  AVALANCHE // Avalanches
  WAVES_SUBMERSION // Vagues-Submersion
}

// Vigilance Météo par MétéoFrance
model WeatherAlert {
  id String @id @default(uuid())

  // common fields for all indicators
  validity_start          DateTime // the date is the first date of the validity period, included
  validity_end            DateTime // the date is the last date of the validity period, included
  diffusion_date          DateTime
  created_at              DateTime              @default(now())
  updated_at              DateTime              @default(now()) @updatedAt
  municipality_insee_code String
  data_availability       DataAvailabilityEnum? @default(AVAILABLE)
  // specific fields for this indicator
  // a row will be created ONLY if there is an alert
  // an alert is a combination of a code_alert and a phenomenon
  // example: alert HEAT_WAVE code RED

  code_alert CodeAlertEnums?
  phenomenon PhenomenonsEnum?
}

enum PolluantQualificatifsNumberEnum {
  NotAvailable // Non disponible : 0
  SpecialEvent // Evénement particulier : 8
  Good // Bon : 1
  Fair // Moyen : 2
  Moderate // Dégradé : 3
  Poor // Mauvais : 4
  VeryPoor // Très mauvais : 5
  ExtremelyPoor // Extrêmement mauvais : 6
}

model IndiceAtmosperic {
  id String @id @default(uuid())

  // common fields for all indicators
  validity_start          DateTime // the date is the first date of the validity period, included
  validity_end            DateTime // the date is the last date of the validity period, included
  diffusion_date          DateTime
  created_at              DateTime              @default(now())
  updated_at              DateTime              @default(now()) @updatedAt
  municipality_insee_code String
  data_availability       DataAvailabilityEnum? @default(AVAILABLE)
  // specific fields for this indicator

  gml_id          Number // example: 835197777; no idea what this is
  aasqa           String
  date_maj        String // example: '2024/01/16 12:11:49.728+01';
  partition_field String // example: '112024w3'; no idea what this is
  code_no2: PolluantQualificatifsNumberEnum;
  code_o3: PolluantQualificatifsNumberEnum;
  code_pm10: PolluantQualificatifsNumberEnum;
  code_pm25: PolluantQualificatifsNumberEnum;
  code_qual: PolluantQualificatifsNumberEnum;
  code_so2: PolluantQualificatifsNumberEnum;
  code_zone: MunicipalityJSON['COM'] | EPCIJSON['EPCI'];
  coul_qual: PolluantQualificatifsColorEnum;
  date_dif        String // example: '2024/01/16';
  date_ech        String // example: '2024-01-15';
  epsg_reg: ESPGEnum; // EPSG Geodetic Parameter Dataset
  lib_qual: PolluantQualificatifsLabelEnum;
  lib_zone        String // Municipality or EPCI. example: 'Gastins';
  source: SourcesEnum;
  type_zone: TypeZoneEnum;
  x_reg: number; // example: 650403.898030424;
  x_wgs84: number; // example: 3.01999928628953;
  y_reg: number; // example: 2403379.42595027;
  y_wgs84: number; // example: 48.6270847202683;
}

enum PollutionStateEnum {
  ALERT // ALERTE
  INFORMATION_AND_RECOMMANDATION // INFORMATION ET RECOMMANDATION
  NO_ALERT // PAS DE DEPASSEMENT
  ALERT_PERSISTANCE // ALERTE SUR PERSISTANCE
}

enum PollutionCodeEnum {
  SULFUR_DIOXIDE // Dioxyde de soufre - code 1
  NITROGEN_DIOXIDE // Dioxyde d'azote - code 3 / code 8
  FINES_PARTICLES // Particules fines PM10 - code 5
  OZONE // Ozone - code 7
  PM10 // Particules en suspension PM10 - code 24
  PM25 // Particules en suspension PM2.5 - code 39
  BENZENE // Benzène - code 60
}

model AlertPollutionAtmospheric {
  id String @id @default(uuid())

  // common fields for all indicators
  validity_start          DateTime // the date is the first date of the validity period, included
  validity_end            DateTime // the date is the last date of the validity period, included
  diffusion_date          DateTime
  created_at              DateTime              @default(now())
  updated_at              DateTime              @default(now()) @updatedAt
  municipality_insee_code String
  data_availability       DataAvailabilityEnum? @default(AVAILABLE)
  // specific fields for this indicator
  state                   PollutionStateEnum
  code                    PollutionCodeEnum
  comment_short           String
  comment_long            String
}
